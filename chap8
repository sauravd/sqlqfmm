“List customers and the dates they placed an order, sorted in order date sequence.”

SELECT Customers.CustFirstName || ' ' || Customers.CustLastName AS CustomerName, Orders.OrderDate
	FROM (Customers 
	INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID
) ORDER BY Orders.OrderDate;




“List employees and the customers for whom they booked an order.” 
(Hint: The solution requires a JOIN of more than two tables.)
You can find the solution in CH08_Employees_And_Customers (211 rows).

SELECT DISTINCT Concat(Customers.CustFirstName, ' ', Customers.CustLastName) AS CustomerName,
Concat(Employees.EmpFirstName, ' ', Employees.EmpLastName) AS EmployeeName, 
Orders.OrderNumber, Orders.OrderDate
FROM ((Customers INNER JOIN Orders
	  ON Customers.CustomerID = Orders.CustomerID)
	 INNER JOIN Employees 
	  ON Employees.EmployeeID = Orders.EmployeeID)




“Display all orders, the products in each order, and 
the amount owed for each product, in order number sequence.”

SELECT Orders.OrderNumber AS OrderNo, Orders.OrderDate,
Order_Details.ProductNumber AS ProductNo, Products.ProductName AS Product,
Order_Details.QuotedPrice AS Price, 
Order_Details.QuantityOrdered * Order_Details.QuotedPrice AS AmountOwed
FROM((Orders INNER JOIN
	 Order_Details ON Orders.OrderNumber = Order_Details.OrderNumber)
	INNER JOIN Products ON Order_Details.ProductNumber = Products.ProductNumber)
ORDER BY OrderNo;



“Show me the vendors and the products they supply to 
us for products that cost less than $100.”

SELECT Vendors.VendName, Products.ProductName, Product_Vendors.WholesalePrice
FROM (Vendors INNER JOIN Product_Vendors ON 
	  (Vendors.VendorID = Product_Vendors.VendorID)) 
	  INNER JOIN Products ON (Products.ProductNumber = Product_Vendors.ProductNumber)
WHERE Product_Vendors.WholesalePrice < 100;
