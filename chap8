“List customers and the dates they placed an order, sorted in order date sequence.”

SELECT Customers.CustFirstName || ' ' || Customers.CustLastName AS CustomerName, Orders.OrderDate
	FROM (Customers 
	INNER JOIN Orders ON Customers.CustomerID = Orders.CustomerID
) ORDER BY Orders.OrderDate;




“List employees and the customers for whom they booked an order.” 
(Hint: The solution requires a JOIN of more than two tables.)
You can find the solution in CH08_Employees_And_Customers (211 rows).

SELECT DISTINCT Concat(Customers.CustFirstName, ' ', Customers.CustLastName) AS CustomerName,
Concat(Employees.EmpFirstName, ' ', Employees.EmpLastName) AS EmployeeName, 
Orders.OrderNumber, Orders.OrderDate
FROM ((Customers INNER JOIN Orders
	  ON Customers.CustomerID = Orders.CustomerID)
	 INNER JOIN Employees 
	  ON Employees.EmployeeID = Orders.EmployeeID)




“Display all orders, the products in each order, and 
the amount owed for each product, in order number sequence.”

SELECT Orders.OrderNumber AS OrderNo, Orders.OrderDate,
Order_Details.ProductNumber AS ProductNo, Products.ProductName AS Product,
Order_Details.QuotedPrice AS Price, 
Order_Details.QuantityOrdered * Order_Details.QuotedPrice AS AmountOwed
FROM((Orders INNER JOIN
	 Order_Details ON Orders.OrderNumber = Order_Details.OrderNumber)
	INNER JOIN Products ON Order_Details.ProductNumber = Products.ProductNumber)
ORDER BY OrderNo;



“Show me the vendors and the products they supply to 
us for products that cost less than $100.”

SELECT Vendors.VendName, Products.ProductName, Product_Vendors.WholesalePrice
FROM (Vendors INNER JOIN Product_Vendors ON 
	  (Vendors.VendorID = Product_Vendors.VendorID)) 
	  INNER JOIN Products ON (Products.ProductNumber = Product_Vendors.ProductNumber)
WHERE Product_Vendors.WholesalePrice < 100;

“Show me customers and employees who have the same last name.” 

SELECT Concat(Customers.CustFirstName, ' ',Customers.CustLastName) AS CustFullName,
Concat(Employees.EmpFirstName, ' ',Employees.EmpLastName) AS EmpFullName
FROM Customers INNER JOIN Employees ON (Customers.CustLastName = Employees.EmpLastName);



“Show me customers and employees who live in the same city.”

SELECT Concat(Customers.CustFirstName, ' ', Customers.CustLastName) AS CustFullName, 
Customers.CustCity, 
Concat(Employees.EmpFirstName, ' ', Employees.EmpLastName) AS EmpFullName, 
Employees.EmpCity
FROM Customers INNER JOIN Employees ON (Customers.CustCity = Employees.EmpCity);



“Display agents and the engagement dates they booked, sorted by booking start date.”

SELECT Concat(Agents.AgtFirstName, ' ', Agents.AgtLastName) AS AgentsName,
Engagements.StartDate, Engagements.EndDate
FROM Agents INNER JOIN Engagements ON 
(Agents.AgentID = Engagements.AgentID)
ORDER BY Engagements.StartDate

List customers and the entertainers they booked.”

SELECT DISTINCT Concat(Customers.CustFirstName, ' ', Customers.CustLastName) AS CustomersName,
Entertainers.EntStageName 
FROM ((Customers INNER JOIN Engagements ON
	  Customers.CustomerID = Engagements.CustomerID)
	 INNER JOIN Entertainers ON   
	 Entertainers.EntertainerID = Engagements.EntertainerID)
ORDER BY CustomersName;


“Find the agents and entertainers who live in the same postal code.”

SELECT Concat(Agents.AgtFirstName, ' ' , Agents.AgtLastName) AS AgentName,
Entertainers.EntStageName, Agents.AgtZipCode, Entertainers.EntZipCode
FROM Agents INNER JOIN Entertainers ON 
	Agents.AgtZipCode = Entertainers.EntZipCode

“Display buildings and all the classrooms in each building.”

SELECT Buildings.BuildingName, Buildings.BuildingCode,
Class_Rooms.ClassRoomID 
FROM Class_Rooms INNER JOIN Buildings ON
Class_Rooms.BuildingCode = Buildings.BuildingCode
ORDER BY Buildings.BuildingName;


“List students and all the classes in which they are currently enrolled.”

SELECT Concat(Students.StudFirstName, ' ',Students.StudLastName) AS StudentName,
Classes.ClassID, Subjects.SubjectName
FROM(((Students INNER JOIN Student_Schedules ON 
	  (Students.StudentID = Student_Schedules.StudentID))
	 INNER JOIN Student_Class_Status ON
	 (Student_Schedules.ClassStatus = Student_Class_Status. ClassStatus))
	 INNER JOIN Classes ON 
	 (Classes.ClassID = Student_Schedules.ClassID))
	 INNER JOIN Subjects ON
	 (Subjects.SubjectID = Classes.SubjectID)
	 WHERE Student_Class_Status.ClassStatusDescription = 'Enrolled';

“List the faculty staff and the subject each teaches.”

SELECT Concat(Staff.StfFirstName,'  ',Staff.StfLastName), 
Subjects.SubjectName
FROM((Staff INNER JOIN Faculty_Subjects ON
	 Staff.StaffID = Faculty_Subjects.StaffID)
	INNER JOIN Subjects ON
	Subjects.SubjectID = Faculty_Subjects.SubjectID)
